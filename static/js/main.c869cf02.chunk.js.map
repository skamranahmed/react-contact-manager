{"version":3,"sources":["context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/Header.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/About.js","components/pages/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","actions","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactInfo","onShowClick","e","onDeleteClick","a","delete","name","email","phone","className","onClick","style","cursor","float","color","bind","to","marginRight","protoTypes","PropTypes","object","isRequired","Contacts","Fragment","Header","branding","href","defaultProps","string","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","func","AddContact","errors","target","onSubmit","disptach","preventDefault","newContact","post","history","push","EditContact","updatedContact","match","params","put","console","log","About","NotFound","App","exact","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c869cf02.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          (contact) => contact.id !== action.payload\n        ),\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts],\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map((contact) =>\n          contact.id === action.payload.id\n            ? (contact = action.payload)\n            : contact\n        ),\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  // this acts like a global state\n  state = {\n    contacts: [\n      // {\n      //   id: 1,\n      //   name: \"John Doe\",\n      //   email: \"jdoe@gmail.com\",\n      //   phone: \"555-555-5555\",\n      // },\n      // {\n      //   id: 2,\n      //   name: \"Jane Doe\",\n      //   email: \"janedoe@gmail.com\",\n      //   phone: \"666-666-6666\",\n      // },\n    ],\n    dispatch: (actions) => {\n      this.setState((state) => reducer(state, actions));\n    },\n  };\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({ contacts: res.data });\n\n    // axios.get(\"https://jsonplaceholder.typicode.com/users\").then((res) =>\n    //   this.setState({\n    //     contacts: res.data,\n    //   })\n    // );\n  }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { Consumer } from \"../../context\";\nimport axios from \"axios\";\n\nclass Contact extends Component {\n  state = {\n    showContactInfo: true,\n  };\n\n  onShowClick = (e) => {\n    this.setState({\n      showContactInfo: !this.state.showContactInfo,\n    });\n  };\n\n  onDeleteClick = async (id, dispatch) => {\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\n\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\n\n    // axios\n    //   .delete(`https://jsonplaceholder.typicode.com/users/${id}`)\n    //   .then((res) => dispatch({ type: \"DELETE_CONTACT\", payload: id }));\n    // dispatch({ type: \"DELETE_CONTACT\", payload: id });\n  };\n\n  render() {\n    // destructuring\n    const { id, name, email, phone } = this.props.contact;\n    const { showContactInfo } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card card-body mb-3\">\n              <h4>\n                {name}&nbsp;\n                <i\n                  onClick={this.onShowClick}\n                  className=\"fas fa-sort-down\"\n                  style={{ cursor: \"pointer\" }}\n                ></i>\n                <i\n                  className=\"fas fa-times\"\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\n                  onClick={this.onDeleteClick.bind(this, id, dispatch)}\n                ></i>\n                <Link to={`contact/edit/${id}`}>\n                  <i\n                    className=\"fas fa-pencil-alt\"\n                    style={{\n                      cursor: \"pointer\",\n                      float: \"right\",\n                      color: \"black\",\n                      marginRight: \"0.5rem\",\n                    }}\n                  ></i>\n                </Link>\n              </h4>\n              {showContactInfo ? (\n                <ul className=\"list-group\">\n                  <li className=\"list-group-item\">Email: {email}</li>\n                  <li className=\"list-group-item\">Phone: {phone}</li>\n                </ul>\n              ) : null}\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\n// type checking for props\nContact.protoTypes = {\n  contact: PropTypes.object.isRequired,\n};\n\nexport default Contact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\nimport Contact from \"../contacts/Contact\";\n\nclass Contacts extends Component {\n  render() {\n    return (\n      <Consumer>\n        {(value) => {\n          const { contacts } = value;\n          return (\n            <React.Fragment>\n              <h1 className=\"display-4 mb-2\">\n                <span className=\"text-danger\">Contact </span>List\n              </h1>\n              {contacts.map((contact) => (\n                <Contact key={contact.id} contact={contact} />\n              ))}\n            </React.Fragment>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default Contacts;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst Header = (props) => {\n  const { branding } = props;\n  return (\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-0\">\n      <div className=\"container\">\n        <a href=\"/\" className=\"navbar-brand\">\n          {branding}\n        </a>\n        <div>\n          <ul className=\"navbar-nav mr-auto\">\n            <li className=\"nav-item\">\n              <Link to=\"/\" className=\"nav-link\">\n                <i className=\"fas fa-home\"> Home</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/contact/add\" className=\"nav-link\">\n                <i className=\"fas fa-plus\"> Add</i>\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/about\" className=\"nav-link\">\n                <i className=\"fas fa-question\"> About</i>\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\n// defining default prop for Header component\nHeader.defaultProps = {\n  branding: \"My App\",\n};\n\n// type checking for props\nHeader.protoTypes = {\n  branding: PropTypes.string.isRequired,\n};\n\nexport default Header;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\n\nconst TextInputGroup = ({\n  label,\n  type,\n  name,\n  placeholder,\n  value,\n  onChange,\n  error,\n}) => {\n  return (\n    <div className=\"form-group\">\n      <label htmlFor=\"name\">{label}</label>\n      <input\n        type={type}\n        name={name}\n        // className=\"from-control form-control lg\"\n        className={classnames(\"from-control form-control lg\", {\n          \"is-invalid\": error,\n        })}\n        placeholder={placeholder}\n        value={value}\n        onChange={onChange}\n      />\n      {error && <div className=\"invalid-feedback\">{error}</div>}\n    </div>\n  );\n};\n\n// defining default prop for TextInputGroup component\nTextInputGroup.defaultProps = {\n  type: \"text\",\n};\n\n// type checking for props\nTextInputGroup.protoTypes = {\n  label: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  placeholder: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  error: PropTypes.string,\n};\n\nexport default TextInputGroup;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import { v4 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass AddContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (disptach, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const newContact = {\n      // id: uuid(),\n      name: name,\n      email: email,\n      phone: phone,\n    };\n\n    const res = await axios.post(\n      \"https://jsonplaceholder.typicode.com/users\",\n      newContact\n    );\n\n    disptach({ type: \"ADD_CONTACT\", payload: res.data });\n\n    // axios\n    //   .post(\"https://jsonplaceholder.typicode.com/users\", newContact)\n    //   .then((res) => disptach({ type: \"ADD_CONTACT\", payload: res.data }));\n\n    // disptach({ type: \"ADD_CONTACT\", payload: newContact });\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Add Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Add Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default AddContact;\n","import React, { Component } from \"react\";\nimport { Consumer } from \"../../context\";\n// import { v4 as uuid } from \"uuid\";\nimport TextInputGroup from \"../layout/TextInputGroup\";\nimport axios from \"axios\";\n\nclass EditContact extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    phone: \"\",\n    errors: {},\n  };\n\n  async componentDidMount() {\n    const { id } = this.props.match.params;\n\n    console.log(id);\n\n    const res = await axios.get(\n      `https://jsonplaceholder.typicode.com/users/${id}`\n    );\n    const contact = res.data;\n    this.setState({\n      name: contact.name,\n      email: contact.email,\n      phone: contact.phone,\n    });\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  onSubmit = async (disptach, e) => {\n    e.preventDefault();\n    const { name, email, phone } = this.state;\n    // Check for errors\n    if (name === \"\") {\n      this.setState({ errors: { name: \"Name is required\" } });\n      return;\n    }\n    if (email === \"\") {\n      this.setState({ errors: { email: \"Email is required\" } });\n      return;\n    }\n    if (phone === \"\") {\n      this.setState({ errors: { phone: \"Phone is required\" } });\n      return;\n    }\n\n    const updatedContact = {\n      // id: uuid(),\n      name: name,\n      email: email,\n      phone: phone,\n    };\n\n    const { id } = this.props.match.params;\n    const res = await axios.put(\n      `https://jsonplaceholder.typicode.com/users/${id}`,\n      updatedContact\n    );\n\n    disptach({ type: \"UPDATE_CONTACT\", payload: res.data });\n\n    this.setState({\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      errors: {},\n    });\n\n    this.props.history.push(\"/\");\n  };\n\n  render() {\n    const { name, email, phone, errors } = this.state;\n\n    return (\n      <Consumer>\n        {(value) => {\n          const { dispatch } = value;\n          return (\n            <div className=\"card mb-3\">\n              <div className=\"card-header\">Edit Contact</div>\n              <div className=\"card-body\">\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\n                  <TextInputGroup\n                    label=\"Name\"\n                    name=\"name\"\n                    placeholder=\"Enter Name\"\n                    value={name}\n                    onChange={this.onChange}\n                    error={errors.name}\n                  />\n                  <TextInputGroup\n                    label=\"Email\"\n                    type=\"email\"\n                    name=\"email\"\n                    placeholder=\"Enter Email\"\n                    value={email}\n                    onChange={this.onChange}\n                    error={errors.email}\n                  />\n                  <TextInputGroup\n                    label=\"Phone\"\n                    name=\"phone\"\n                    placeholder=\"Enter Phone\"\n                    value={phone}\n                    onChange={this.onChange}\n                    error={errors.phone}\n                  />\n                  <input\n                    type=\"submit\"\n                    value=\"Update Contact\"\n                    className=\"btn btn-light btn-block\"\n                  />\n                </form>\n              </div>\n            </div>\n          );\n        }}\n      </Consumer>\n    );\n  }\n}\n\nexport default EditContact;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">About Contact Manager</h1>\n      <p className=\"lead\">Simple App to Manage Contacts</p>\n      <p className=\"text-secondary\">Version 1.0.0</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div>\n      <h1 className=\"display-4\">\n        <span className=\"text-danger\">404</span> Page Not Found\n      </h1>\n      <p className=\"lead\">Sorry, this page does not exist.</p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport Header from \"./components/layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport \"./App.css\";\nimport { Provider } from \"./context\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\n// import Contact from \"./components/contacts/Contact\";\nimport About from \"./components/pages/About\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={About} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}